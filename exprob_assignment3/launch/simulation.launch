<?xml version="1.0"?>
<launch>
	
	  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="recording" default="false"/>
  <arg name="world" default="assignment" />
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" value="$(find exprob_assignment3)/worlds/$(arg world).world"/>
  <arg name="respawn_gazebo" default="false"/>
  <arg name="use_clock_frequency" default="false"/>
  <arg name="pub_clock_frequency" default="100"/>

  <!-- set use_sim_time flag -->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg recording)" name="command_arg2" value=""/>
  <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

  <!-- start gazebo server-->
 <group if="$(arg use_clock_frequency)">
    <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
  </group>
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="screen"
	args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)" /> 
	 
  <!-- start gazebo client -->
 <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
  </group> 



  <!-- <include file="$(find exprob_assignment3)/launch/gazebo.launch"></include> -->
  <include file="$(find moveit_test_nocollision)/launch/demo_gazebo.launch"></include>
  
  <remap from="scan" to="/m2wr/laser/scan"/>
  
  
    <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">
      <param name="base_frame" value="base_link"/>
      <param name="map_update_interval" value="5.0"/>
      <param name="maxUrange" value="16.0"/>
      <param name="sigma" value="0.05"/>
      <param name="kernelSize" value="1"/>
      <param name="lstep" value="0.05"/>
      <param name="astep" value="0.05"/>
      <param name="iterations" value="5"/>
      <param name="lsigma" value="0.075"/>
      <param name="ogain" value="3.0"/>
      <param name="lskip" value="0"/>
      <param name="srr" value="0.1"/>
      <param name="srt" value="0.2"/>
      <param name="str" value="0.1"/>
      <param name="stt" value="0.2"/>
      <param name="linearUpdate" value="1.0"/>
      <param name="angularUpdate" value="0.5"/>
      <param name="temporalUpdate" value="3.0"/>
      <param name="resampleThreshold" value="0.5"/>
      <param name="particles" value="30"/>
      <param name="xmin" value="-50.0"/>
      <param name="ymin" value="-50.0"/>
      <param name="xmax" value="50.0"/>
      <param name="ymax" value="50.0"/>
      <param name="delta" value="0.05"/>
      <param name="llsamplerange" value="0.01"/>
      <param name="llsamplestep" value="0.01"/>
      <param name="lasamplerange" value="0.005"/>
      <param name="lasamplestep" value="0.005"/>
    </node>
    
    
      <node pkg="move_base" type="move_base" respawn="false" name="move_base">
	<!--<param name="base_global_planner" value="carrot_planner/CarrotPlanner" />-->
	<param name="base_global_planner" value="global_planner/GlobalPlanner" />
    <rosparam file="$(find planning)/param/costmap_common_params.yaml" command="load" ns="global_costmap"/>
    <rosparam file="$(find planning)/param/costmap_common_params.yaml" command="load" ns="local_costmap"/>
    <rosparam file="$(find exprob_assignment3)/param/local_costmap_params.yaml" command="load"/>
    <rosparam file="$(find exprob_assignment3)/param/global_costmap_params.yaml" command="load"/>
    <rosparam file="$(find exprob_assignment3)/param/base_local_planner_params.yaml" command="load"/>
    <rosparam file="$(find planning)/param/move_base_params.yaml" command="load"/>
  </node>
  
  <!-- node for the detection of the aruco -->
    <node pkg="aruco_ros" type="marker_publisher" name="marker_publisher" args="/image:=/robot/camera1/image_raw" />
    
    <!-- node armor -->
   <node pkg="armor" type="execute" name="armor_service" args="it.emarolab.armor.ARMORMainService"/> 
   
  <!-- node for the oracle implementation -->
    <node pkg="exprob_assignment3" type="final_oracle" name="final_oracle" output="screen"/>
    
<node name="hint"  pkg="exprob_assignment3" type="hint.py"/> 
<node name="fsm"  pkg="exprob_assignment3" type="fsm.py" output="screen"/> 
<node name="aruco"  pkg="exprob_assignment3" type="aruco.py"/> 
</launch>
